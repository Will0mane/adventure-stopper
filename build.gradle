plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'me.will0mane.plugins'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name 'papermc'
        url = uri('https://repo.papermc.io/repository/maven-public/')
    }

    maven {
        url = uri("http://repo.willomane.com/repository/Adventure-API/")
        allowInsecureProtocol(true)
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    compileOnly 'org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT'

    compileOnly 'com.velocitypowered:velocity-api:3.2.0-SNAPSHOT'
    annotationProcessor("com.velocitypowered:velocity-api:3.2.0-SNAPSHOT")

    compileOnly 'me.will0mane.plugins:Adventure-API:1.0.2.2:all'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
